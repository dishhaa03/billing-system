{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaScript-nodejs\\\\Billing_Systemm\\\\billing-system\\\\src\\\\pages\\\\NewBill.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './NewBill.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewBill = () => {\n  _s();\n  const [billId] = useState(Date.now().toString()); // Unique bill ID\n  const [customerName, setCustomerName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [users, setUsers] = useState([]);\n  const [userid, setUserId] = useState(null);\n  const [items, setItems] = useState([{\n    item: '',\n    quantity: '',\n    sellingPrice: '',\n    discountPercentage: '',\n    discountedPrice: '',\n    totalPrice: ''\n  }]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [payableAmount, setPayableAmount] = useState(0);\n  const [isNewName, setIsNewName] = useState(false);\n  const [payments, setPayments] = useState([]); // Store payment objects\n  const [paymentIds, setPaymentIds] = useState([]); // Store payment IDs\n\n  // For payments:\n  const [showOnlinePayment, setShowOnlinePayment] = useState(false);\n  const [showCashPayment, setShowCashPayment] = useState(false);\n  const [onlinePaymentAmount, setOnlinePaymentAmount] = useState(payableAmount);\n  const [cashPaymentAmount, setCashPaymentAmount] = useState(payableAmount);\n  const navigate = useNavigate();\n\n  // Function to add a new item row\n  useEffect(() => {\n    axios.get('/api/users', {\n      proxy: {\n        host: 'localhost',\n        port: 5000\n      }\n    }).then(response => {\n      setUsers(response.data);\n    }).catch(error => console.error('Failed to fetch users', error));\n  }, []);\n  useEffect(() => {\n    setPayableAmount(totalAmount); // Sync payable amount with total initially\n  }, [totalAmount]);\n  useEffect(() => {\n    setCashPaymentAmount(payableAmount);\n    setOnlinePaymentAmount(payableAmount);\n  }, [payableAmount]);\n  const addItem = () => {\n    setItems([...items, {\n      item: '',\n      quantity: '',\n      sellingPrice: '',\n      discountPercentage: '',\n      discountedPrice: '',\n      totalPrice: ''\n    }]);\n  };\n  const deleteItem = () => {\n    if (items.length === 0) {\n      return;\n    }\n    // Remove the last item from the state\n    setItems(prevItems => prevItems.slice(0, -1));\n  };\n  const handleShowOnlinePayment = () => {\n    setShowOnlinePayment(!showCashPayment);\n    setShowCashPayment(false);\n  };\n  const handleShowCashPayment = () => {\n    setShowCashPayment(!showCashPayment);\n    setShowOnlinePayment(false);\n  };\n  const handleNameChange = e => {\n    const inputName = e.target.value;\n    setCustomerName(inputName);\n\n    // Find the user matching the input\n    const selectedUser = users.find(user => user.name === inputName);\n    setUserId(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id);\n    if (selectedUser) {\n      setContactNo(selectedUser.contactNo); // Autofill contact number\n      setIsNewName(false);\n    } else {\n      setContactNo(''); // Clear contact number if no match\n      setIsNewName(true);\n    }\n  };\n\n  // Handle adding new user\n  const handleAddUser = () => {\n    axios.post('/api/users', {\n      name: customerName,\n      contactNo\n    }).then(response => {\n      setUsers([...users, response.data]);\n      setUserId(response.data._id);\n      alert('User added successfully');\n      setIsNewName(false);\n    }).catch(error => console.error('Failed to add user', error));\n  };\n\n  // Function to handle changes in item fields\n  const handleItemChange = (index, event) => {\n    const newItems = [...items];\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update field based on input\n    newItems[index][name] = value;\n    const sellingPrice = parseFloat(newItems[index].sellingPrice) || 0;\n    const discountPercentage = parseFloat(newItems[index].discountPercentage) || 0;\n    const discountedPrice = sellingPrice - sellingPrice * (discountPercentage / 100);\n    newItems[index].discountedPrice = discountedPrice.toFixed(2);\n    const quantity = parseFloat(newItems[index].quantity) || 0;\n    newItems[index].totalPrice = (quantity * discountedPrice).toFixed(2);\n    setItems(newItems);\n    calculateTotalAmount(); // Recalculate total amount for the bill\n  };\n  const handleAddPayment = async (amount, isCash, qrDetails = \"\") => {\n    const newPayment = {\n      billId: null,\n      amount,\n      isCash,\n      status: \"SUCCESS\",\n      // Assuming successful for now\n      qrDetails\n    };\n    try {\n      const response = await axios.post(\"/api/payments\", newPayment);\n      console.log(\"Payment Response:\", response);\n      if (response.status === 201) {\n        const paymentId = response.data._id;\n\n        // Update both payments and paymentIds state\n        setPayments([...payments, newPayment]); // Add payment object\n        setPaymentIds([...paymentIds, paymentId]); // Store the new payment ID\n\n        alert(`Payment of ₹${amount} added successfully!`);\n      } else {\n        throw new Error(\"Failed to save payment.\");\n      }\n    } catch (error) {\n      console.error(\"Error adding payment:\", error);\n      alert(\"Error occurred while adding the payment.\");\n    }\n  };\n\n  // Function to calculate total amount of the bill\n  const calculateTotalAmount = () => {\n    const total = items.reduce((acc, item) => acc + (parseFloat(item.totalPrice) || 0), 0);\n    setTotalAmount(total.toFixed(2));\n  };\n  const calculateTotalPaidAmount = () => {\n    return payments.reduce((total, payment) => total + Number(payment.amount), 0);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log({\n      billId,\n      customerName,\n      contactNo,\n      items,\n      totalAmount,\n      payableAmount,\n      payments\n    });\n    try {\n      const totalPaidAmount = calculateTotalPaidAmount();\n      const pendingAmount = payableAmount - totalPaidAmount;\n      const isCleared = totalPaidAmount >= payableAmount;\n      console.log(`Total Paid: ₹${totalPaidAmount}, Pending: ₹${pendingAmount}`);\n\n      // Step 1: Send all items to the backend and receive product IDs\n      const productPromises = items.map(item => axios.post('/api/products', {\n        itemName: item.item,\n        quantity: item.quantity,\n        sellingPrice: item.sellingPrice,\n        discountPercentage: item.discountPercentage || 0,\n        discountedPrice: item.discountedPrice,\n        totalPrice: item.totalPrice\n      }));\n      const productResponses = await Promise.all(productPromises);\n      const productIds = productResponses.map(res => res.data._id);\n      console.log('Product IDs:', productIds);\n\n      // Step 2: Create the bill with the product IDs and payment information\n      const billPayload = {\n        user: userid,\n        products: productIds,\n        totalAmount: parseFloat(totalAmount),\n        totalPayableAmount: parseFloat(payableAmount),\n        pendingAmount: pendingAmount,\n        // Assuming no payments made yet\n        payments: paymentIds,\n        // Array of payment ids\n        billDate: new Date().toISOString(),\n        isPending: true,\n        // Default as pending\n        isCleared: isCleared // Not cleared initially\n      };\n      const billResponse = await axios.post('/api/bills', billPayload);\n      if (billResponse.status === 201) {\n        const savedBill = billResponse.data;\n        console.log(\"Bill saved successfully:\", savedBill);\n\n        // Step 3: Update products and payments with the bill ID\n        const updatePayload = {\n          billId: savedBill._id,\n          productIds,\n          paymentIds,\n          userId: userid,\n          totalAmount: parseFloat(payableAmount),\n          pendingAmount: parseFloat(pendingAmount)\n        };\n        const updateResponse = await axios.post(\"/api/bills/update-bill-ids\", updatePayload);\n        if (updateResponse.status === 200) {\n          alert(\"Bill saved and references updated successfully!\");\n          navigate('/bills');\n        } else {\n          throw new Error(\"Failed to update product and payment references.\");\n        }\n      } else {\n        throw new Error(\"Failed to save bill.\");\n      }\n    } catch (error) {\n      console.log('Error saving bill:', error);\n      alert('Error occurred while saving the bill.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-bill-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shagun Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Invoice No: \", billId, \" Date: \", new Date().toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Details of Receiver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-row\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: handleNameChange,\n              list: \"user-suggestions\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"user-suggestions\",\n              children: users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.name\n              }, user._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Contact No:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: contactNo,\n              onChange: e => setContactNo(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-item-button\",\n            type: \"button\",\n            onClick: handleAddUser,\n            disabled: !isNewName,\n            children: \"Add Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Selling Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Discount %\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Discounted Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"item\",\n            placeholder: \"Item\",\n            value: item.item,\n            onChange: e => handleItemChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            placeholder: \"Qty\",\n            value: item.quantity,\n            onChange: e => handleItemChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"sellingPrice\",\n            placeholder: \"Selling Price\",\n            value: item.sellingPrice,\n            onChange: e => handleItemChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"discountPercentage\",\n            placeholder: \"Discount %\",\n            value: item.discountPercentage,\n            onChange: e => handleItemChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"discountedPrice\",\n            placeholder: \"Discounted Price\",\n            value: item.discountedPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"totalPrice\",\n            placeholder: \"Total Price\",\n            value: item.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: deleteItem,\n          className: \"delete-item-button\",\n          children: \"Delete Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addItem,\n          className: \"add-item-button\",\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Amount: \\u20B9\", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Payable Amount: \\u20B9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: payableAmount,\n          onChange: e => setPayableAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleShowOnlinePayment,\n          children: \"Pay Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleShowCashPayment,\n          children: \"Cash Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), showOnlinePayment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Online Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: onlinePaymentAmount,\n          onChange: e => setOnlinePaymentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddPayment(onlinePaymentAmount, false, \"QR12345\"),\n          children: \"Generate QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), showCashPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cash-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cash Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cashPaymentAmount,\n          onChange: e => setCashPaymentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddPayment(cashPaymentAmount, true),\n          children: \"Paid Cash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(NewBill, \"uZNxHHHuSZqiOWyHKujrFbf+qBM=\", false, function () {\n  return [useNavigate];\n});\n_c = NewBill;\nexport default NewBill;\nvar _c;\n$RefreshReg$(_c, \"NewBill\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","NewBill","_s","billId","Date","now","toString","customerName","setCustomerName","contactNo","setContactNo","users","setUsers","userid","setUserId","items","setItems","item","quantity","sellingPrice","discountPercentage","discountedPrice","totalPrice","totalAmount","setTotalAmount","payableAmount","setPayableAmount","isNewName","setIsNewName","payments","setPayments","paymentIds","setPaymentIds","showOnlinePayment","setShowOnlinePayment","showCashPayment","setShowCashPayment","onlinePaymentAmount","setOnlinePaymentAmount","cashPaymentAmount","setCashPaymentAmount","navigate","get","proxy","host","port","then","response","data","catch","error","console","addItem","deleteItem","length","prevItems","slice","handleShowOnlinePayment","handleShowCashPayment","handleNameChange","e","inputName","target","value","selectedUser","find","user","name","_id","handleAddUser","post","alert","handleItemChange","index","event","newItems","parseFloat","toFixed","calculateTotalAmount","handleAddPayment","amount","isCash","qrDetails","newPayment","status","log","paymentId","Error","total","reduce","acc","calculateTotalPaidAmount","payment","Number","handleSubmit","preventDefault","totalPaidAmount","pendingAmount","isCleared","productPromises","map","itemName","productResponses","Promise","all","productIds","res","billPayload","products","totalPayableAmount","billDate","toISOString","isPending","billResponse","savedBill","updatePayload","userId","updateResponse","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","type","onChange","list","required","id","onClick","disabled","placeholder","readOnly","_c","$RefreshReg$"],"sources":["D:/JavaScript-nodejs/Billing_Systemm/billing-system/src/pages/NewBill.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NewBill.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NewBill = () => {\r\n  const [billId] = useState(Date.now().toString()); // Unique bill ID\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [contactNo, setContactNo] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [userid, setUserId] = useState(null);\r\n  const [items, setItems] = useState([{ item: '', quantity: '',sellingPrice: '', discountPercentage: '', discountedPrice: '', totalPrice: '' }]);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [payableAmount, setPayableAmount] = useState(0);\r\n  const [isNewName, setIsNewName] = useState(false);\r\n  const [payments, setPayments] = useState([]); // Store payment objects\r\n  const [paymentIds, setPaymentIds] = useState([]); // Store payment IDs\r\n\r\n  // For payments:\r\n  const [showOnlinePayment, setShowOnlinePayment] = useState(false);\r\n  const [showCashPayment, setShowCashPayment] = useState(false);\r\n\r\n  const [onlinePaymentAmount, setOnlinePaymentAmount] = useState(payableAmount);\r\n  const [cashPaymentAmount, setCashPaymentAmount] = useState(payableAmount);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Function to add a new item row\r\n  useEffect(() => {\r\n    axios.get('/api/users', {\r\n      proxy:{\r\n        host: 'localhost',\r\n        port: 5000\r\n      }\r\n    })\r\n    .then((response) =>{\r\n      setUsers(response.data);\r\n    } )\r\n    .catch((error) => console.error('Failed to fetch users', error));\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setPayableAmount(totalAmount); // Sync payable amount with total initially\r\n  }, [totalAmount]);\r\n\r\n  useEffect(()=>{\r\n    setCashPaymentAmount(payableAmount);\r\n    setOnlinePaymentAmount(payableAmount);\r\n  }, [payableAmount]);\r\n\r\n  const addItem = () => {\r\n    setItems([...items, { item: '', quantity: '', sellingPrice: '', discountPercentage: '', discountedPrice: '', totalPrice: '' }]);\r\n  };\r\n\r\n  const deleteItem = ()=>{\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n    // Remove the last item from the state\r\n    setItems((prevItems) => prevItems.slice(0, -1));\r\n  }\r\n\r\n  const handleShowOnlinePayment = () =>{\r\n    setShowOnlinePayment(!showCashPayment);\r\n    setShowCashPayment(false);\r\n  } \r\n  const handleShowCashPayment = () =>{\r\n    setShowCashPayment(!showCashPayment);\r\n    setShowOnlinePayment(false);\r\n  } \r\n\r\n  const handleNameChange = (e) => {\r\n    const inputName = e.target.value;\r\n    setCustomerName(inputName);\r\n\r\n    // Find the user matching the input\r\n    const selectedUser = users.find((user) => user.name === inputName);\r\n    setUserId(selectedUser?._id);\r\n    if (selectedUser) {\r\n      setContactNo(selectedUser.contactNo); // Autofill contact number\r\n      setIsNewName(false);\r\n    } else {\r\n      setContactNo(''); // Clear contact number if no match\r\n      setIsNewName(true);\r\n    }\r\n  };\r\n\r\n  // Handle adding new user\r\n  const handleAddUser = () => {\r\n    axios.post('/api/users', { name: customerName, contactNo })\r\n      .then((response) =>{\r\n        setUsers([...users, response.data]);\r\n        setUserId(response.data._id);\r\n        alert('User added successfully');\r\n        setIsNewName(false);\r\n      })\r\n      .catch((error) => console.error('Failed to add user', error));\r\n  };\r\n\r\n  // Function to handle changes in item fields\r\n  const handleItemChange = (index, event) => {\r\n    const newItems = [...items];\r\n    const { name, value } = event.target;\r\n\r\n    // Update field based on input\r\n    newItems[index][name] = value;\r\n\r\n    const sellingPrice = parseFloat(newItems[index].sellingPrice) || 0;\r\n    const discountPercentage = parseFloat(newItems[index].discountPercentage) || 0;\r\n\r\n    const discountedPrice = sellingPrice - (sellingPrice * (discountPercentage / 100));\r\n    newItems[index].discountedPrice = discountedPrice.toFixed(2);\r\n    \r\n    const quantity = parseFloat(newItems[index].quantity) || 0;\r\n    newItems[index].totalPrice = (quantity * discountedPrice).toFixed(2);\r\n\r\n    setItems(newItems);\r\n    calculateTotalAmount(); // Recalculate total amount for the bill\r\n  };\r\n\r\n  const handleAddPayment = async (amount, isCash, qrDetails = \"\") => {\r\n    const newPayment = {\r\n      billId: null,\r\n      amount,\r\n      isCash,\r\n      status: \"SUCCESS\", // Assuming successful for now\r\n      qrDetails,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/payments\", newPayment);\r\n      console.log(\"Payment Response:\", response);\r\n\r\n      if (response.status === 201) {\r\n        const paymentId = response.data._id;\r\n\r\n        // Update both payments and paymentIds state\r\n        setPayments([...payments, newPayment]); // Add payment object\r\n        setPaymentIds([...paymentIds, paymentId]); // Store the new payment ID\r\n\r\n        alert(`Payment of ₹${amount} added successfully!`);\r\n      } else {\r\n        throw new Error(\"Failed to save payment.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding payment:\", error);\r\n      alert(\"Error occurred while adding the payment.\");\r\n    }\r\n  };\r\n\r\n  // Function to calculate total amount of the bill\r\n  const calculateTotalAmount = () => {\r\n    const total = items.reduce((acc, item) => acc + (parseFloat(item.totalPrice) || 0), 0);\r\n    setTotalAmount(total.toFixed(2));\r\n  };\r\n\r\n  const calculateTotalPaidAmount = () => {\r\n    return payments.reduce((total, payment) => total + Number(payment.amount), 0);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    console.log({\r\n      billId,\r\n      customerName,\r\n      contactNo,\r\n      items,\r\n      totalAmount,\r\n      payableAmount,\r\n      payments,\r\n    });\r\n  \r\n    try {\r\n      const totalPaidAmount = calculateTotalPaidAmount();\r\n      const pendingAmount = payableAmount - totalPaidAmount;\r\n      const isCleared = totalPaidAmount >= payableAmount;\r\n\r\n      console.log(`Total Paid: ₹${totalPaidAmount}, Pending: ₹${pendingAmount}`);\r\n\r\n      // Step 1: Send all items to the backend and receive product IDs\r\n      const productPromises = items.map((item) =>\r\n        axios.post('/api/products', {\r\n          itemName: item.item,\r\n          quantity: item.quantity,\r\n          sellingPrice: item.sellingPrice,\r\n          discountPercentage: item.discountPercentage || 0,\r\n          discountedPrice: item.discountedPrice,\r\n          totalPrice: item.totalPrice,\r\n        })\r\n      );\r\n  \r\n      const productResponses = await Promise.all(productPromises);\r\n      const productIds = productResponses.map((res) => res.data._id);\r\n  \r\n      console.log('Product IDs:', productIds);\r\n  \r\n      // Step 2: Create the bill with the product IDs and payment information\r\n      const billPayload = {\r\n        user: userid, \r\n        products: productIds,\r\n        totalAmount: parseFloat(totalAmount),\r\n        totalPayableAmount: parseFloat(payableAmount),\r\n        pendingAmount: pendingAmount, // Assuming no payments made yet\r\n        payments: paymentIds, // Array of payment ids\r\n        billDate: new Date().toISOString(),\r\n        isPending: true, // Default as pending\r\n        isCleared: isCleared, // Not cleared initially\r\n      };\r\n  \r\n      const billResponse = await axios.post('/api/bills', billPayload);\r\n  \r\n      if (billResponse.status === 201) {\r\n        const savedBill = billResponse.data;\r\n        console.log(\"Bill saved successfully:\", savedBill);\r\n  \r\n        // Step 3: Update products and payments with the bill ID\r\n        const updatePayload = {\r\n          billId: savedBill._id,\r\n          productIds,\r\n          paymentIds,\r\n          userId: userid,\r\n          totalAmount: parseFloat(payableAmount),\r\n          pendingAmount: parseFloat(pendingAmount),\r\n        };\r\n  \r\n        const updateResponse = await axios.post(\r\n          \"/api/bills/update-bill-ids\",\r\n          updatePayload\r\n        );\r\n  \r\n        if (updateResponse.status === 200) {\r\n          alert(\"Bill saved and references updated successfully!\");\r\n          navigate('/bills');\r\n        } else {\r\n          throw new Error(\"Failed to update product and payment references.\");\r\n        }\r\n      } else {\r\n        throw new Error(\"Failed to save bill.\");\r\n      }\r\n    } catch (error) {\r\n      console.log('Error saving bill:', error);\r\n      alert('Error occurred while saving the bill.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-bill-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"bill-header\">\r\n          <h2>Shagun Collection</h2>\r\n          <p>Invoice No: {billId} Date: {new Date().toLocaleDateString()}</p>\r\n        </div>\r\n\r\n        <div className=\"bill-details\">\r\n        <h3>Details of Receiver</h3>\r\n        <div className=\"form-group form-row\"> {/* Added form-row class */}\r\n            <div className=\"form-field\"> {/* Wrap name input in a div */}\r\n            <label>Name:</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={handleNameChange}\r\n                list=\"user-suggestions\"\r\n                required\r\n            />\r\n            <datalist id=\"user-suggestions\">\r\n              {users.map((user) => (\r\n                <option key={user._id} value={user.name} />\r\n              ))}\r\n            </datalist>\r\n            </div>\r\n            <div className=\"form-field\"> {/* Wrap contact number input in a div */}\r\n            <label>Contact No:</label>\r\n            <input\r\n                type=\"text\"\r\n                value={contactNo}\r\n                onChange={(e) => setContactNo(e.target.value)}\r\n                required\r\n            />\r\n            </div>\r\n            <button className=\"add-item-button\" type=\"button\" onClick={handleAddUser} disabled={!isNewName}>Add Name</button>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"item-list\">\r\n          <h3>Items</h3>\r\n          <div className=\"item-header\">\r\n            <div>Item</div>\r\n            <div>Qty</div>\r\n            <div>Selling Price</div>\r\n            <div>Discount %</div>\r\n            <div>Discounted Price</div>\r\n            <div>Total Price</div>\r\n          </div>\r\n          {items.map((item, index) => (\r\n            <div key={index} className=\"item-row\">\r\n              <input type=\"text\" name=\"item\" placeholder=\"Item\" value={item.item} onChange={(e) => handleItemChange(index, e)} required />\r\n              <input type=\"number\" name=\"quantity\" placeholder=\"Qty\" value={item.quantity} onChange={(e) => handleItemChange(index, e)} required />\r\n              <input type=\"number\" name=\"sellingPrice\" placeholder=\"Selling Price\" value={item.sellingPrice} onChange={(e) => handleItemChange(index, e)} required />\r\n              <input type=\"number\" name=\"discountPercentage\" placeholder=\"Discount %\" value={item.discountPercentage} onChange={(e) => handleItemChange(index, e)} />\r\n              <input type=\"text\" name=\"discountedPrice\" placeholder=\"Discounted Price\" value={item.discountedPrice} readOnly />\r\n              <input type=\"text\" name=\"totalPrice\" placeholder=\"Total Price\" value={item.totalPrice} readOnly />\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={deleteItem} className=\"delete-item-button\">Delete Item</button>\r\n          <button type=\"button\" onClick={addItem} className=\"add-item-button\">Add Item</button>\r\n        </div>\r\n\r\n        <h3>Total Amount: ₹{totalAmount}</h3>\r\n\r\n        <h3>Total Payable Amount: ₹ <input\r\n            type=\"number\"\r\n            value={payableAmount}\r\n            onChange={(e) => setPayableAmount(e.target.value)}\r\n            required\r\n          />\r\n        </h3>\r\n\r\n        <div className=\"payment-buttons\">\r\n          <button type=\"button\" onClick={handleShowOnlinePayment}>Pay Online</button>\r\n          <button type=\"button\" onClick={handleShowCashPayment}>Cash Payment</button>\r\n        </div>\r\n        {/* Online Payment Section */}\r\n        {showOnlinePayment && (\r\n          <div className=\"online-payment\">\r\n            <h3>Online Payment</h3>\r\n            <input\r\n              type=\"number\"\r\n              value={onlinePaymentAmount}\r\n              onChange={(e) => setOnlinePaymentAmount(e.target.value)}\r\n            />\r\n            <button type=\"button\"\r\n              onClick={() => handleAddPayment(onlinePaymentAmount, false, \"QR12345\")}\r\n            >\r\n              Generate QR\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Cash Payment Section */}\r\n        {showCashPayment && (\r\n          <div className=\"cash-payment\">\r\n            <h3>Cash Payment</h3>\r\n            <input\r\n              type=\"number\"\r\n              value={cashPaymentAmount}\r\n              onChange={(e) => setCashPaymentAmount(e.target.value)}\r\n            />\r\n            <button type=\"button\"\r\n              onClick={() => handleAddPayment(cashPaymentAmount, true)}\r\n            >\r\n              Paid Cash\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"payment-buttons\">\r\n          <button type=\"submit\">Save Bill</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBill;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}