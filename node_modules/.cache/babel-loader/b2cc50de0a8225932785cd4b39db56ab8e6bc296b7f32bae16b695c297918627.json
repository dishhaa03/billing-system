{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaScript-nodejs\\\\Billing_Systemm\\\\billing-system\\\\src\\\\pages\\\\BillDetails.js\",\n  _s = $RefreshSig$();\n// src/pages/BillDetails.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './NewBill.css';\nimport './BillDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BillDetails = () => {\n  _s();\n  var _bill$user, _bill$user2;\n  const {\n    billid\n  } = useParams(); // Extract bill ID from the route\n  const [bill, setBill] = useState(null); // Store fetched bill data\n  const [items, setItems] = useState([]); // Manage items state\n  const [payments, setPayments] = useState([]);\n  const [newPaymentIds, setNewPaymentIds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showOnlinePayment, setShowOnlinePayment] = useState(false);\n  const [showCashPayment, setShowCashPayment] = useState(false);\n  const [onlinePaymentAmount, setOnlinePaymentAmount] = useState(0);\n  const [cashPaymentAmount, setCashPaymentAmount] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [payableAmount, setPayableAmount] = useState(0);\n  const [pendingAmount, setPendingAmount] = useState(0);\n\n  // Fetch Bill Data\n  useEffect(() => {\n    const fetchBill = async () => {\n      try {\n        // console.log('billid from frontend:', billid);\n        const response = await axios.get(`/api/bills/${billid}`);\n        const billData = response.data;\n        console.log('Bill Data:', billData);\n        setBill(billData);\n        setItems(billData.products); // Initialize items from bill data\n        setPayments(billData.payments);\n        setTotalAmount(billData.totalAmount);\n        setPayableAmount(billData.totalPayableAmount);\n        setPendingAmount(billData.pendingAmount);\n        // setOnlinePaymentAmount(billData.pendingAmount);\n        // setCashPaymentAmount(billData.pendingAmount);\n      } catch (error) {\n        console.error('Error fetching bill:', error);\n        setError('Failed to fetch bill details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBill();\n  }, [billid]);\n  const isCleared = bill === null || bill === void 0 ? void 0 : bill.isCleared; // Check if the bill is cleared\n\n  // Handle Item Changes\n  const handleItemChange = (index, event) => {\n    const newItems = [...items];\n    const {\n      name,\n      value\n    } = event.target;\n\n    // Update field based on input\n    newItems[index][name] = value;\n    const sellingPrice = parseFloat(newItems[index].sellingPrice) || 0;\n    const discountPercentage = parseFloat(newItems[index].discountPercentage) || 0;\n    const discountedPrice = sellingPrice - sellingPrice * (discountPercentage / 100);\n    newItems[index].discountedPrice = discountedPrice.toFixed(2);\n    const quantity = parseFloat(newItems[index].quantity) || 0;\n    newItems[index].totalPrice = (quantity * discountedPrice).toFixed(2);\n    setItems(newItems);\n    calculateTotalAmount(); // Recalculate total amount for the bill\n  };\n\n  // Add a New Item\n  const addItem = () => {\n    setItems([...items, {\n      itemName: '',\n      quantity: 0,\n      sellingPrice: 0,\n      discountPercentage: 0,\n      totalPrice: 0\n    }]);\n  };\n\n  // Delete the Last \n  const deleteItem = () => {\n    setItems(items.slice(0, -1));\n  };\n  useEffect(() => {\n    const totalPaid = payments.reduce((acc, payment) => acc + (parseFloat(payment.amount) || 0), 0);\n    const pending = payableAmount - totalPaid;\n    setPendingAmount(pending);\n    setCashPaymentAmount(pending);\n    setOnlinePaymentAmount(pending);\n  }, [payableAmount, payments]);\n  useEffect(() => {\n    setPayableAmount(totalAmount);\n  }, [totalAmount]);\n  const calculateTotalAmount = () => {\n    const total = items.reduce((acc, item) => acc + (parseFloat(item.totalPrice) || 0), 0);\n    setTotalAmount(total.toFixed(2));\n  };\n  const handleShowOnlinePayment = () => {\n    setShowOnlinePayment(!showCashPayment);\n    setShowCashPayment(false);\n  };\n  const handleShowCashPayment = () => {\n    setShowCashPayment(!showCashPayment);\n    setShowOnlinePayment(false);\n  };\n  const handleAddPayment = async (amount, isCash, qrDetails = \"\") => {\n    const newPayment = {\n      billId: billid,\n      amount,\n      isCash,\n      status: \"SUCCESS\",\n      // Assuming successful for now\n      qrDetails\n    };\n    try {\n      const response = await axios.post(\"/api/payments\", newPayment);\n      console.log(\"Payment Response:\", response);\n      if (response.status === 201) {\n        const paymentId = response.data._id;\n\n        // Update both payments and paymentIds state\n        setPayments([...payments, newPayment]); // Add payment object\n        setNewPaymentIds([...newPaymentIds, paymentId]); // Store the new payment ID\n\n        alert(`Payment of â‚¹${amount} added successfully!`);\n      } else {\n        throw new Error(\"Failed to save payment.\");\n      }\n    } catch (error) {\n      console.error(\"Error adding payment:\", error);\n      alert(\"Error occurred while adding the payment.\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedBillData = {\n        products: items,\n        // Array of product objects\n        newPaymentIds,\n        totalAmount: parseFloat(totalAmount),\n        totalPayableAmount: parseFloat(payableAmount)\n      };\n      const response = await axios.put(`/api/bills/${billid}`, updatedBillData);\n      console.log(\"Updated Bill:\", response.data);\n      alert(\"Bill updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating bill:\", error);\n      alert(\"Failed to update the bill.\");\n    }\n  };\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0'); // Add leading 0 if needed\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading bill details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bill-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bill Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Invoice No:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 10\n      }, this), \" \", bill._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Bill Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 10\n      }, this), \" \", formatDate(bill.billDate)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-row\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ((_bill$user = bill.user) === null || _bill$user === void 0 ? void 0 : _bill$user.name) || '',\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contact No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ((_bill$user2 = bill.user) === null || _bill$user2 === void 0 ? void 0 : _bill$user2.contactNo) || '',\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Selling Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Discount %\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Discounted Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"itemName\",\n            value: item.itemName,\n            onChange: e => handleItemChange(index, e),\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            value: item.quantity,\n            onChange: e => handleItemChange(index, e),\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"sellingPrice\",\n            value: item.sellingPrice,\n            onChange: e => handleItemChange(index, e),\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"discountPercentage\",\n            value: item.discountPercentage,\n            onChange: e => handleItemChange(index, e),\n            readOnly: isCleared\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: (item.sellingPrice - item.sellingPrice * item.discountPercentage / 100).toFixed(2),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: item.totalPrice,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)), !isCleared && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-item-button\",\n            onClick: addItem,\n            children: \"Add Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"delete-item-button\",\n            onClick: deleteItem,\n            children: \"Delete Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Amount: \\u20B9\", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Payable Amount: \\u20B9\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: payableAmount,\n          onChange: e => {\n            setPayableAmount(e.target.value);\n          },\n          readOnly: isCleared\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payments-section\",\n        children: bill.payments.map((payment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), formatDate(payment.date), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u20B9\", payment.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Pending Amount: \\u20B9\", pendingAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleShowOnlinePayment,\n          children: \"Pay Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleShowCashPayment,\n          children: \"Cash Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }, this), showOnlinePayment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"online-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Online Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: onlinePaymentAmount,\n          onChange: e => setOnlinePaymentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddPayment(onlinePaymentAmount, false, \"QR12345\"),\n          children: \"Generate QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), showCashPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cash-payment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cash Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cashPaymentAmount,\n          onChange: e => setCashPaymentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddPayment(cashPaymentAmount, true),\n          children: \"Paid Cash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(BillDetails, \"9mcWv9nnPVDCleix251urkGWh9Y=\", false, function () {\n  return [useParams];\n});\n_c = BillDetails;\nexport default BillDetails;\nvar _c;\n$RefreshReg$(_c, \"BillDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","BillDetails","_s","_bill$user","_bill$user2","billid","bill","setBill","items","setItems","payments","setPayments","newPaymentIds","setNewPaymentIds","loading","setLoading","error","setError","showOnlinePayment","setShowOnlinePayment","showCashPayment","setShowCashPayment","onlinePaymentAmount","setOnlinePaymentAmount","cashPaymentAmount","setCashPaymentAmount","totalAmount","setTotalAmount","payableAmount","setPayableAmount","pendingAmount","setPendingAmount","fetchBill","response","get","billData","data","console","log","products","totalPayableAmount","isCleared","handleItemChange","index","event","newItems","name","value","target","sellingPrice","parseFloat","discountPercentage","discountedPrice","toFixed","quantity","totalPrice","calculateTotalAmount","addItem","itemName","deleteItem","slice","totalPaid","reduce","acc","payment","amount","pending","total","item","handleShowOnlinePayment","handleShowCashPayment","handleAddPayment","isCash","qrDetails","newPayment","billId","status","post","paymentId","_id","alert","Error","handleSubmit","e","preventDefault","updatedBillData","put","formatDate","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","children","fileName","_jsxFileName","lineNumber","columnNumber","className","billDate","onSubmit","type","user","readOnly","contactNo","map","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/JavaScript-nodejs/Billing_Systemm/billing-system/src/pages/BillDetails.js"],"sourcesContent":["// src/pages/BillDetails.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './NewBill.css';\r\nimport './BillDetails.css';\r\n\r\nconst BillDetails = () => {\r\n  const { billid } = useParams(); // Extract bill ID from the route\r\n  const [bill, setBill] = useState(null); // Store fetched bill data\r\n  const [items, setItems] = useState([]); // Manage items state\r\n  const [payments, setPayments] = useState([]); \r\n  const [newPaymentIds, setNewPaymentIds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showOnlinePayment, setShowOnlinePayment] = useState(false);\r\n  const [showCashPayment, setShowCashPayment] = useState(false);\r\n\r\n  const [onlinePaymentAmount, setOnlinePaymentAmount] = useState(0);\r\n  const [cashPaymentAmount, setCashPaymentAmount] = useState(0);\r\n   \r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [payableAmount, setPayableAmount] = useState(0);\r\n  const [pendingAmount, setPendingAmount] = useState(0);\r\n\r\n\r\n  // Fetch Bill Data\r\n  useEffect(() => {\r\n    const fetchBill = async () => {\r\n      try {\r\n        // console.log('billid from frontend:', billid);\r\n        const response = await axios.get(`/api/bills/${billid}`);\r\n        const billData = response.data;\r\n        console.log('Bill Data:', billData);\r\n        setBill(billData);\r\n        setItems(billData.products); // Initialize items from bill data\r\n        setPayments(billData.payments);\r\n        setTotalAmount(billData.totalAmount);\r\n        setPayableAmount(billData.totalPayableAmount);\r\n        setPendingAmount(billData.pendingAmount);\r\n        // setOnlinePaymentAmount(billData.pendingAmount);\r\n        // setCashPaymentAmount(billData.pendingAmount);\r\n      } catch (error) {\r\n        console.error('Error fetching bill:', error);\r\n        setError('Failed to fetch bill details.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBill();\r\n  }, [billid]);\r\n\r\n\r\n  const isCleared = bill?.isCleared; // Check if the bill is cleared\r\n\r\n  // Handle Item Changes\r\n  const handleItemChange = (index, event) => {\r\n    const newItems = [...items];\r\n    const { name, value } = event.target;\r\n\r\n    // Update field based on input\r\n    newItems[index][name] = value;\r\n\r\n    const sellingPrice = parseFloat(newItems[index].sellingPrice) || 0;\r\n    const discountPercentage = parseFloat(newItems[index].discountPercentage) || 0;\r\n\r\n    const discountedPrice = sellingPrice - (sellingPrice * (discountPercentage / 100));\r\n    newItems[index].discountedPrice = discountedPrice.toFixed(2);\r\n    \r\n    const quantity = parseFloat(newItems[index].quantity) || 0;\r\n    newItems[index].totalPrice = (quantity * discountedPrice).toFixed(2);\r\n\r\n    setItems(newItems);\r\n    calculateTotalAmount(); // Recalculate total amount for the bill\r\n  };\r\n\r\n  // Add a New Item\r\n  const addItem = () => {\r\n    setItems([...items, { itemName: '', quantity: 0, sellingPrice: 0, discountPercentage: 0, totalPrice: 0}]);\r\n  };\r\n\r\n  // Delete the Last \r\n  const deleteItem = () => {\r\n    setItems(items.slice(0, -1));\r\n  };\r\n  useEffect(()=>{\r\n    const totalPaid = payments.reduce((acc, payment) => acc + (parseFloat(payment.amount) || 0), 0);\r\n    const pending = payableAmount - totalPaid;\r\n    setPendingAmount(pending);\r\n    setCashPaymentAmount(pending);\r\n    setOnlinePaymentAmount(pending);\r\n  }, [payableAmount, payments]);\r\n\r\n  useEffect(()=>{\r\n    setPayableAmount(totalAmount);\r\n  }, [totalAmount]);\r\n\r\n  const calculateTotalAmount = () => {\r\n    const total = items.reduce((acc, item) => acc + (parseFloat(item.totalPrice) || 0), 0);\r\n    setTotalAmount(total.toFixed(2));\r\n  };\r\n\r\n  const handleShowOnlinePayment = () =>{\r\n    setShowOnlinePayment(!showCashPayment);\r\n    setShowCashPayment(false);\r\n  };\r\n  const handleShowCashPayment = () =>{\r\n    setShowCashPayment(!showCashPayment);\r\n    setShowOnlinePayment(false);\r\n  };\r\n  const handleAddPayment = async(amount, isCash, qrDetails = \"\")=>{\r\n    const newPayment = {\r\n      billId: billid,\r\n      amount,\r\n      isCash,\r\n      status: \"SUCCESS\", // Assuming successful for now\r\n      qrDetails,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/payments\", newPayment);\r\n      console.log(\"Payment Response:\", response);\r\n\r\n      if (response.status === 201) {\r\n        const paymentId = response.data._id;\r\n\r\n        // Update both payments and paymentIds state\r\n        setPayments([...payments, newPayment]); // Add payment object\r\n        setNewPaymentIds([...newPaymentIds, paymentId]); // Store the new payment ID\r\n\r\n        alert(`Payment of â‚¹${amount} added successfully!`);\r\n      } else {\r\n        throw new Error(\"Failed to save payment.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding payment:\", error);\r\n      alert(\"Error occurred while adding the payment.\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const updatedBillData = {\r\n        products: items, // Array of product objects\r\n        newPaymentIds,\r\n        totalAmount: parseFloat(totalAmount),\r\n        totalPayableAmount: parseFloat(payableAmount),\r\n      };\r\n  \r\n      const response = await axios.put(`/api/bills/${billid}`, updatedBillData);\r\n      console.log(\"Updated Bill:\", response.data);\r\n  \r\n      alert(\"Bill updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating bill:\", error);\r\n      alert(\"Failed to update the bill.\");\r\n    }\r\n  };\r\n  \r\n\r\n  function formatDate(dateString) {\r\n    const date = new Date(dateString);\r\n    const day = String(date.getDate()).padStart(2, '0'); // Add leading 0 if needed\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  if (loading) return <p>Loading bill details...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"bill-details-container\">\r\n      <h2>Bill Details</h2>\r\n      <p><strong>Invoice No:</strong> {bill._id}</p>\r\n      <p><strong>Bill Date:</strong> {formatDate(bill.billDate)}</p>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group form-row\"> {/* Added form-row class */}\r\n        <div className=\"form-field\"> {/* Wrap name input in a div */}\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={bill.user?.name || ''}\r\n          readOnly={isCleared}\r\n        />\r\n        </div>\r\n        <div className=\"form-field\"> {/* Wrap contact number input in a div */}\r\n        <label>Contact No:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={bill.user?.contactNo || ''}\r\n          readOnly={isCleared}\r\n        />\r\n        </div>\r\n        </div>\r\n\r\n      {/* Items List */}\r\n      <div className=\"item-list\">\r\n        <h3>Items</h3>\r\n        <div className=\"item-header\">\r\n          <div>Item</div>\r\n          <div>Qty</div>\r\n          <div>Selling Price</div>\r\n          <div>Discount %</div>\r\n          <div>Discounted Price</div>\r\n          <div>Total Price</div>\r\n        </div>\r\n        {items.map((item, index) => (\r\n          <div key={index} className=\"item-row\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"itemName\"\r\n              value={item.itemName}\r\n              onChange={(e) => handleItemChange(index, e)}\r\n              readOnly={isCleared}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={item.quantity}\r\n              onChange={(e) => handleItemChange(index, e)}\r\n              readOnly={isCleared}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"sellingPrice\"\r\n              value={item.sellingPrice}\r\n              onChange={(e) => handleItemChange(index, e)}\r\n              readOnly={isCleared}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"discountPercentage\"\r\n              value={item.discountPercentage}\r\n              onChange={(e) => handleItemChange(index, e)}\r\n              readOnly={isCleared}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={(item.sellingPrice - (item.sellingPrice * item.discountPercentage) / 100).toFixed(2)}\r\n              readOnly\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={(item.totalPrice)}\r\n              readOnly\r\n            />\r\n          </div>\r\n        ))}\r\n        {!isCleared && (\r\n          <div className=\"item-buttons\">\r\n            <button type=\"button\" className='add-item-button' onClick={addItem}>Add Item</button>\r\n            <button type=\"button\" className='delete-item-button' onClick={deleteItem}>Delete Item</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Total and Payable Amount */}\r\n      <h3>Total Amount: â‚¹{totalAmount}</h3>\r\n      <h3>\r\n        Total Payable Amount: â‚¹\r\n        <input\r\n          type=\"number\"\r\n          value={payableAmount}\r\n          onChange={(e) =>{\r\n            setPayableAmount(e.target.value);\r\n          }}\r\n          readOnly={isCleared}\r\n        />\r\n      </h3>\r\n\r\n      {/* Payments Section */}\r\n      <div className=\"payments-section\">\r\n        {bill.payments.map((payment, index) => (\r\n          <div key={index} className=\"payment-row\">\r\n            <strong>Date: </strong>{formatDate(payment.date)}\r\n            <span>â‚¹{payment.amount}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Current Pending Amount */}\r\n      <h3>Current Pending Amount: â‚¹{pendingAmount}</h3>\r\n\r\n      {/* Action Buttons\r\n      <div className=\"payment-buttons\">\r\n        {!isCleared && (\r\n          <>\r\n            <button type=\"button\">Add Payment</button>\r\n            <button type=\"submit\">Save Changes</button>\r\n          </>\r\n        )}\r\n      </div> */}\r\n\r\n      <div className=\"payment-buttons\">\r\n          <button type=\"button\" onClick={handleShowOnlinePayment}>Pay Online</button>\r\n          <button type=\"button\" onClick={handleShowCashPayment}>Cash Payment</button>\r\n        </div>\r\n        {/* Online Payment Section */}\r\n        {showOnlinePayment && (\r\n          <div className=\"online-payment\">\r\n            <h3>Online Payment</h3>\r\n            <input\r\n              type=\"number\"\r\n              value={onlinePaymentAmount}\r\n              onChange={(e) => setOnlinePaymentAmount(e.target.value)}\r\n            />\r\n            <button type=\"button\"\r\n              onClick={() => handleAddPayment(onlinePaymentAmount, false, \"QR12345\")}\r\n            >\r\n              Generate QR\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Cash Payment Section */}\r\n        {showCashPayment && (\r\n          <div className=\"cash-payment\">\r\n            <h3>Cash Payment</h3>\r\n            <input\r\n              type=\"number\"\r\n              value={cashPaymentAmount}\r\n              onChange={(e) => setCashPaymentAmount(e.target.value)}\r\n            />\r\n            <button type=\"button\"\r\n              onClick={() => handleAddPayment(cashPaymentAmount, true)}\r\n            >\r\n              Paid Cash\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"payment-buttons\">\r\n          <button type=\"submit\">Save Bill</button>\r\n        </div>\r\n\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}